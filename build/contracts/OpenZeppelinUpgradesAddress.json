{
  "contractName": "OpenZeppelinUpgradesAddress",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility library of inline functions on addresses Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/lib/Address.sol\":\"OpenZeppelinUpgradesAddress\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/lib/Address.sol\":{\"keccak256\":\"0xc9a99055afb411d8515c130762d6f44f2c5bbadee93a425f0aa7325361cc3b24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0b1ef76075be637e6ad18e60880775e2d11c3004a88827bbe62d4787091faed\",\"dweb:/ipfs/QmbGwLuhEUr6WG9r1ANkiS3mUDj76MJ95TpzwkSrH5qTxz\"]}},\"version\":1}",
  "bytecode": "0x60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220875b58b3820e9ed0beb476a0c2a6630b01f5f8392bb2f793148c940b89f586ce64736f6c63430008110033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220875b58b3820e9ed0beb476a0c2a6630b01f5f8392bb2f793148c940b89f586ce64736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "575:1036:31:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;575:1036:31;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "575:1036:31:-:0;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.7.0 <0.9.0;\r\n/**\r\n * Utility library of inline functions on addresses\r\n *\r\n * Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol\r\n * This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts\r\n * when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the\r\n * build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.\r\n */\r\nlibrary OpenZeppelinUpgradesAddress {\r\n    /**\r\n     * Returns whether the target address is a contract\r\n     * @dev This function will return false if invoked during the constructor of a contract,\r\n     * as the code is not actually created until after the constructor finishes.\r\n     * @param account address of the account to check\r\n     * @return whether the target address is a contract\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        uint256 size;\r\n        // XXX Currently there is no better way to check if there is a contract in an address\r\n        // than to check the size of the code at that address.\r\n        // See https://ethereum.stackexchange.com/a/14016/36603\r\n        // for more details about how this works.\r\n        // TODO Check this again before the Serenity release, because all addresses will be\r\n        // contracts then.\r\n        // solhint-disable-next-line no-inline-assembly\r\n        assembly { size := extcodesize(account) }\r\n        return size > 0;\r\n    }\r\n}",
  "sourcePath": "D:\\work\\eth\\cinema-nft\\contracts\\lib\\Address.sol",
  "ast": {
    "absolutePath": "project:/contracts/lib/Address.sol",
    "exportedSymbols": {
      "OpenZeppelinUpgradesAddress": [
        4414
      ]
    },
    "id": 4415,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4395,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:31"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "OpenZeppelinUpgradesAddress",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 4396,
          "nodeType": "StructuredDocumentation",
          "src": "66:507:31",
          "text": " Utility library of inline functions on addresses\n Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol\n This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts\n when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the\n build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version."
        },
        "fullyImplemented": true,
        "id": 4414,
        "linearizedBaseContracts": [
          4414
        ],
        "name": "OpenZeppelinUpgradesAddress",
        "nameLocation": "583:27:31",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4412,
              "nodeType": "Block",
              "src": "1047:561:31",
              "statements": [
                {
                  "assignments": [
                    4405
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4405,
                      "mutability": "mutable",
                      "name": "size",
                      "nameLocation": "1066:4:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 4412,
                      "src": "1058:12:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4404,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1058:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4406,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1058:12:31"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1543:32:31",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1545:28:31",
                        "value": {
                          "arguments": [
                            {
                              "name": "account",
                              "nodeType": "YulIdentifier",
                              "src": "1565:7:31"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "1553:11:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1553:20:31"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "1545:4:31"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 4399,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1565:7:31",
                      "valueSize": 1
                    },
                    {
                      "declaration": 4405,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1545:4:31",
                      "valueSize": 1
                    }
                  ],
                  "id": 4407,
                  "nodeType": "InlineAssembly",
                  "src": "1534:41:31"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4408,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4405,
                      "src": "1592:4:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1599:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1592:8:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4403,
                  "id": 4411,
                  "nodeType": "Return",
                  "src": "1585:15:31"
                }
              ]
            },
            "documentation": {
              "id": 4397,
              "nodeType": "StructuredDocumentation",
              "src": "618:357:31",
              "text": " Returns whether the target address is a contract\n @dev This function will return false if invoked during the constructor of a contract,\n as the code is not actually created until after the constructor finishes.\n @param account address of the account to check\n @return whether the target address is a contract"
            },
            "id": 4413,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nameLocation": "990:10:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4399,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1009:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4413,
                  "src": "1001:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1000:17:31"
            },
            "returnParameters": {
              "id": 4403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4402,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4413,
                  "src": "1041:4:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4401,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1041:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1040:6:31"
            },
            "scope": 4414,
            "src": "981:627:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 4415,
        "src": "575:1036:31",
        "usedErrors": []
      }
    ],
    "src": "33:1578:31"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/lib/Address.sol",
    "exportedSymbols": {
      "OpenZeppelinUpgradesAddress": [
        4414
      ]
    },
    "id": 4415,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4395,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:31"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "OpenZeppelinUpgradesAddress",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 4396,
          "nodeType": "StructuredDocumentation",
          "src": "66:507:31",
          "text": " Utility library of inline functions on addresses\n Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol\n This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts\n when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the\n build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version."
        },
        "fullyImplemented": true,
        "id": 4414,
        "linearizedBaseContracts": [
          4414
        ],
        "name": "OpenZeppelinUpgradesAddress",
        "nameLocation": "583:27:31",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4412,
              "nodeType": "Block",
              "src": "1047:561:31",
              "statements": [
                {
                  "assignments": [
                    4405
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4405,
                      "mutability": "mutable",
                      "name": "size",
                      "nameLocation": "1066:4:31",
                      "nodeType": "VariableDeclaration",
                      "scope": 4412,
                      "src": "1058:12:31",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4404,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1058:7:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4406,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1058:12:31"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1543:32:31",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1545:28:31",
                        "value": {
                          "arguments": [
                            {
                              "name": "account",
                              "nodeType": "YulIdentifier",
                              "src": "1565:7:31"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "1553:11:31"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1553:20:31"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "1545:4:31"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 4399,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1565:7:31",
                      "valueSize": 1
                    },
                    {
                      "declaration": 4405,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1545:4:31",
                      "valueSize": 1
                    }
                  ],
                  "id": 4407,
                  "nodeType": "InlineAssembly",
                  "src": "1534:41:31"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4408,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4405,
                      "src": "1592:4:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1599:1:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1592:8:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4403,
                  "id": 4411,
                  "nodeType": "Return",
                  "src": "1585:15:31"
                }
              ]
            },
            "documentation": {
              "id": 4397,
              "nodeType": "StructuredDocumentation",
              "src": "618:357:31",
              "text": " Returns whether the target address is a contract\n @dev This function will return false if invoked during the constructor of a contract,\n as the code is not actually created until after the constructor finishes.\n @param account address of the account to check\n @return whether the target address is a contract"
            },
            "id": 4413,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nameLocation": "990:10:31",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4400,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4399,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1009:7:31",
                  "nodeType": "VariableDeclaration",
                  "scope": 4413,
                  "src": "1001:15:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1001:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1000:17:31"
            },
            "returnParameters": {
              "id": 4403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4402,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4413,
                  "src": "1041:4:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4401,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1041:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1040:6:31"
            },
            "scope": 4414,
            "src": "981:627:31",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 4415,
        "src": "575:1036:31",
        "usedErrors": []
      }
    ],
    "src": "33:1578:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-10-15T14:37:48.995Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Utility library of inline functions on addresses Source https://raw.githubusercontent.com/OpenZeppelin/openzeppelin-solidity/v2.1.3/contracts/utils/Address.sol This contract is copied here and renamed from the original to avoid clashes in the compiled artifacts when the user imports a zos-lib contract (that transitively causes this contract to be compiled and added to the build/artifacts folder) as well as the vanilla Address implementation from an openzeppelin version.",
    "version": 1
  }
}